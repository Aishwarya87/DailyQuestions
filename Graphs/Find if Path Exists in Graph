from collections import defaultdict, deque
class Solution:
    def validPath(self, n: int, edges: List[List[int]], start: int, end: int) -> bool:
        if not edges:
            return True
        def createAdjList(edges):
            graph=defaultdict(list)
            for i,j in edges:
                graph[i].append(j)
                graph[j].append(i)
            return graph
        def bfs(graph):
            visited = set()
            q= deque()
            q.append(start)
            visited.add(start)
            while q:
                popped= q.popleft()
                for i in graph[popped]:
                    if i==end:
                        return True
                    if i not in visited:
                        visited.add(i)
                        q.append(i)
            return False
        graph= createAdjList(edges)
        return bfs(graph)
    
        
